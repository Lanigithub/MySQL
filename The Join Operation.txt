The Join Operation:
( https://sqlzoo.net/wiki/The_JOIN_operation)

1.  Modify it to show the matchid and player name for all goals scored by Germany. To identify German players, check for: teamid = 'GER'

SELECT matchid, player FROM goal
WHERE teamid= 'GER'

2. Show id, stadium, team1, team2 for just game 1012

SELECT id,stadium,team1,team2
  FROM game
WhERE id= '1012'

3. show the player, teamid, stadium and mdate for every German goal.

SELECT player,teamid,stadium, mdate FROM game 
JOIN goal on game.id= goal.matchid
WHERE game.id= '1012' OR teamid= 'GER'
ORDER BY mdate


4. Show the team1, team2 and player for every goal scored by a player called Mario player LIKE 'Mario%'

SELECT team1, team2 ,player
FROM game
JOIN goal on game.id= goal.matchid
WHERE player LIKE 'Mario%'


5. The table eteam gives details of every national team including the coach. You can JOIN goal to eteam using the phrase goal JOIN eteam on teamid=id

Show player, teamid, coach, gtime for all goals scored in the first 10 minutes gtime<=10


SELECT player, teamid, coach, gtime FROM goal
JOIN eteam on goal.teamid=eteam.id
WHERE gtime<= 10

6. List the dates of the matches and the name of the team in which 'Fernando Santos' was the team1 coach.

SELECT mdate, teamname FROM game
JOIN eteam on game.team1=eteam.id
WHERE team1 IN 
(SELECT team1 from game 
JOIN eteam on game.team1=eteam.id
WHERE coach = 'Fernando Santos')

7. List the player for every goal scored in a game where the stadium was 'National Stadium, Warsaw'

SELECT player FROM goal
JOIN game on game.id= goal.matchid
WHERE stadium = 'National Stadium, Warsaw'

8. The example query shows all goals scored in the Germany-Greece quarterfinal.
Instead show the name of all players who scored a goal against Germany


SELECT DISTINCT player FROM goal
JOIN game on game.id= goal.matchid
 WHERE (team1='GER' OR team2='GER') AND teamid != 'GER';


9. Show teamname and the total number of goals scored.
COUNT and GROUP BY

SELECT teamname, COUNT(*) 
FROM eteam
JOIN goal ON eteam.id= goal.teamid
GROUP BY teamname


10. Show the stadium and the number of goals scored in each stadium.

SELECT stadium, COUNT(*)
FROM  game 
JOIN goal ON game.id= goal.matchid
GROUP BY stadium

11. For every match involving 'POL', show the matchid, date and the number of goals scored.

SELECT matchid, mdate, COUNT(*)
FROM game JOIN goal ON goal.matchid = game.id
WHERE team1 ='POL' OR team2 = 'POL'
GROUP BY matchid, mdate

12. For every match where 'GER' scored, show matchid, match date and the number of goals scored by 'GER'

SELECT matchid, mdate, COUNT(*)
FROM game JOIN goal ON goal.matchid = game.id
WHERE teamid= 'GER'
GROUP BY 1,2

13. CASE WHEN ELSE END
List every match with the goals scored by each team as shown. This will use "CASE WHEN" which has not been explained in 
any previous exercises.in the query given every goal is listed. If it was a team1 goal then a 1 appears in score1, otherwise there is a 0. 
You could SUM this column to get a count of the goals scored by team1. Sort your result by mdate, matchid, team1 and team2.

SELECT mdate, team1, 
SUM(CASE WHEN teamid=team1 THEN 1 ELSE 0 END ) as score1,
team2,    SUM(CASE WHEN teamid=team2 THEN 1 ELSE 0 END ) as score2
FROM game
JOIN goal ON goal.matchid = game.id
GROUP BY mdate, team1, team2 
ORDER BY mdate, team1, team2


**** CASE:  CASE
    WHEN condition1 THEN result1
    WHEN condition2 THEN result2
    WHEN conditionN THEN resultN
    ELSE result
END;

14. Another example of case:  ( https://www.w3schools.com/sql/sql_case.asp)
SELECT OrderID, Quantity,
CASE
    WHEN Quantity > 30 THEN 'The quantity is greater than 30'
    WHEN Quantity = 30 THEN 'The quantity is 30'
    ELSE 'The quantity is under 30'
END AS QuantityText
FROM OrderDetails;


15. More on CASE: show firstName, laseName , jobTitle, Salary and Salary after increase by each jobTitle 

SELECT firstName, lastName, jobTitle, Salary,

CASE
    WHEN jobTitle = 'Salesman' THEN Salary +(Salary*.10 )
    WHEN jobTitle= 'Acountant' THEN Salary +(Salary*.05 )
    WHEN jobTitle= 'HR'         THEN Salary +(Salary*.002 )
    ELSE  Salary +(Salary*.003 )
END  as newSalary

FROM EmployeeDemographics  A
JOIN EmployeeSalary B   ON A.id= B.Sid















